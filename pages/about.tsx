import type { NextPage, GetStaticProps, GetStaticPaths, GetServerSideProps } from "next";
import Head from "next/head";
import { gql, useQuery, NetworkStatus } from "@apollo/client";
import { initializeApollo } from "lib/apolloClient";
import styles from "../styles/Home.module.css";

// const GRAPHQL_QUERY1 = gql`
//   query GetSomethingById($id: string) {
//     getSomethingById(id: $id) {
//       success
//       error
//       message
//       something {
//         name
//       }
//     }
//   }
// `;

const GRAPHQL_QUERY = gql`
  query {
    post(id: "1") {
      id
      title
      body
    }
  }
`;

export const getStaticProps: GetStaticProps = async (context) => {
  // const res = await fetch("http://...");
  // const data = await res.json();

  const variables = { id: "1" };
  const apolloClient = initializeApollo();
  const { data, error } = await apolloClient.query({ query: GRAPHQL_QUERY, variables });
  if (error) console.log(error);

  return { props: { post: data.post } };
};

interface Props {
  post: { __typename: string; id: string; title: string; description: string };
}

const GraphQLPage: NextPage<Props> = ({ post }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Apollo GraphQL Queries</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Apollo GraphQL Queries</h1>
        <p className={styles.description}>Fetched on build time with getStaticProps</p>
        <code className={styles.code}>Fetched on build time with getStaticProps</code>
        <div className={styles.grid}>{JSON.stringify(post)}</div>
      </main>
    </div>
  );
};

export default GraphQLPage;
